function initNetworkStatus(){let statusIndicator=document.getElementById("network-status");if(!statusIndicator){statusIndicator=document.createElement("div");statusIndicator.id="network-status";statusIndicator.className="network-status";document.body.appendChild(statusIndicator);addNetworkStatusStyles()}updateNetworkStatus();window.addEventListener("online",updateNetworkStatus);window.addEventListener("offline",updateNetworkStatus)}function updateNetworkStatus(){const statusIndicator=document.getElementById("network-status");if(!statusIndicator)return;const isOnline=navigator.onLine;if(isOnline){statusIndicator.className="network-status online";statusIndicator.innerHTML='<span class="status-icon">âœ“</span> Online';setTimeout((()=>{statusIndicator.classList.add("hidden")}),3e3)}else{statusIndicator.className="network-status offline";statusIndicator.innerHTML='<span class="status-icon">!</span> Offline Mode';showFeedback("You are offline. Your changes will be saved locally.","warning");statusIndicator.classList.remove("hidden")}}function showFeedback(message,type="info"){if(window.workoutStorage&&window.workoutStorage.showFeedback){window.workoutStorage.showFeedback(message,type);return}let feedbackEl=document.getElementById("feedback-message");if(!feedbackEl){feedbackEl=document.createElement("div");feedbackEl.id="feedback-message";feedbackEl.className="feedback-message";document.body.appendChild(feedbackEl)}feedbackEl.textContent=message;feedbackEl.className=`feedback-message ${type}`;feedbackEl.style.display="block";setTimeout((()=>{feedbackEl.style.display="none"}),3e3)}function addNetworkStatusStyles(){if(document.getElementById("network-status-styles"))return;const style=document.createElement("style");style.id="network-status-styles";style.textContent=`\n    .network-status {\n      position: fixed;\n      top: 70px;\n      right: 20px;\n      padding: 8px 16px;\n      border-radius: 20px;\n      font-size: 14px;\n      font-weight: 500;\n      z-index: 1000;\n      display: flex;\n      align-items: center;\n      box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);\n      transition: all 0.3s ease;\n      opacity: 1;\n    }\n    \n    .network-status.hidden {\n      opacity: 0;\n      transform: translateY(-10px);\n      pointer-events: none;\n    }\n    \n    .network-status.online {\n      background-color: var(--success-light, #dcfce7);\n      color: var(--success-color, #22c55e);\n      border: 1px solid var(--success-color, #22c55e);\n    }\n    \n    .network-status.offline {\n      background-color: var(--warning-light, #fef3c7);\n      color: var(--warning-color, #f59e0b);\n      border: 1px solid var(--warning-color, #f59e0b);\n    }\n    \n    .status-icon {\n      display: inline-flex;\n      align-items: center;\n      justify-content: center;\n      width: 20px;\n      height: 20px;\n      border-radius: 50%;\n      margin-right: 8px;\n      font-size: 12px;\n      font-weight: bold;\n    }\n    \n    .online .status-icon {\n      background-color: var(--success-color, #22c55e);\n      color: white;\n    }\n    \n    .offline .status-icon {\n      background-color: var(--warning-color, #f59e0b);\n      color: white;\n    }\n    \n    @media (prefers-color-scheme: dark) {\n      .network-status.online {\n        background-color: rgba(34, 197, 94, 0.2);\n      }\n      \n      .network-status.offline {\n        background-color: rgba(245, 158, 11, 0.2);\n      }\n    }\n    \n    @media (max-width: 600px) {\n      .network-status {\n        top: auto;\n        bottom: 20px;\n        right: 20px;\n        font-size: 12px;\n        padding: 6px 12px;\n      }\n    }\n  `;document.head.appendChild(style)}function checkConnectionQuality(){if("connection"in navigator){const connection=navigator.connection;if(connection.effectiveType==="slow-2g"||connection.effectiveType==="2g"){showFeedback("Slow connection detected. Some features may be limited.","warning")}connection.addEventListener("change",(()=>{if(connection.effectiveType==="slow-2g"||connection.effectiveType==="2g"){showFeedback("Connection speed changed. Some features may be limited.","warning")}}))}}document.addEventListener("DOMContentLoaded",(()=>{initNetworkStatus();checkConnectionQuality();if("serviceWorker"in navigator){navigator.serviceWorker.addEventListener("controllerchange",(()=>{showFeedback("App updated. Refresh for the latest version.","info")}))}}));window.networkStatus={init:initNetworkStatus,update:updateNetworkStatus,check:checkConnectionQuality};