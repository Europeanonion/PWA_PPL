function getWeightUnit(){if(window.workoutStorage){const data=window.workoutStorage.loadAll();return data.settings?.units||"lb"}return"lb"}function setWeightUnit(unit){if(window.workoutStorage){const data=window.workoutStorage.loadAll();data.settings.units=unit;window.workoutStorage.saveAll(data);updateWeightPlaceholders(unit);window.workoutStorage.showFeedback(`Weight unit changed to ${unit}`,"success")}}function updateWeightPlaceholders(unit){document.querySelectorAll(".weight-input").forEach((input=>{input.placeholder=unit}))}function createWeightUnitSelector(){const currentUnit=getWeightUnit();const selectorContainer=document.createElement("div");selectorContainer.className="weight-unit-selector";const label=document.createElement("label");label.textContent="Weight Unit: ";selectorContainer.appendChild(label);const kgLabel=document.createElement("label");kgLabel.className="unit-label";kgLabel.innerHTML='<input type="radio" name="weight-unit" value="kg"> kg';selectorContainer.appendChild(kgLabel);const lbLabel=document.createElement("label");lbLabel.className="unit-label";lbLabel.innerHTML='<input type="radio" name="weight-unit" value="lb"> lb';selectorContainer.appendChild(lbLabel);const radioInput=selectorContainer.querySelector(`input[value="${currentUnit}"]`);if(radioInput)radioInput.checked=true;selectorContainer.querySelectorAll('input[type="radio"]').forEach((radio=>{radio.addEventListener("change",(function(){setWeightUnit(this.value)}))}));return selectorContainer}function handleExerciseSetChange(event){const element=event.target;const exerciseId=element.dataset.exercise;const setIndex=parseInt(element.dataset.set)-1;const currentPhase=document.querySelector(".phase-content.active").id.replace("phase","");const currentWeek=document.querySelector(`#phase${currentPhase} .week-content.active`).id.split("-")[1].replace("week","");const dayElement=element.closest(".workout-day");const dayHeader=dayElement.querySelector(".day-header").textContent.toLowerCase().replace(/\s+/g,"").replace("#","");let weight=null;let completed=false;if(element.classList.contains("weight-input")){weight=element.value?parseFloat(element.value):null;const checkbox=element.parentNode.querySelector(".completed-checkbox");completed=checkbox?checkbox.checked:false}else if(element.classList.contains("completed-checkbox")){const weightInput=element.parentNode.querySelector(".weight-input");weight=weightInput&&weightInput.value?parseFloat(weightInput.value):null;completed=element.checked}if(exerciseId&&setIndex>=0&&window.workoutStorage){window.workoutStorage.saveSet(currentPhase,currentWeek,dayHeader,exerciseId,setIndex,weight,null,completed)}}function generateExerciseInputs(){console.log("Generating exercise inputs...");const weightUnit=getWeightUnit();const exerciseRows=document.querySelectorAll(".exercise-row");exerciseRows.forEach((row=>{const nameElement=row.querySelector(".exercise-name");if(!nameElement)return;const infoIcon=nameElement.querySelector(".info-icon");if(!infoIcon)return;const onclickAttr=infoIcon.getAttribute("onclick");if(!onclickAttr)return;const match=onclickAttr.match(/toggleNotes\('(.+?)-notes'\)/);if(!match||!match[1])return;const exerciseId=match[1];const workingSetsCell=row.querySelector("td.exercise-data:nth-child(3)");if(!workingSetsCell)return;if(workingSetsCell.querySelector(".set-inputs"))return;let numSets=parseInt(workingSetsCell.textContent.trim());if(isNaN(numSets))numSets=1;const setInputsContainer=document.createElement("div");setInputsContainer.className="set-inputs";for(let i=1;i<=numSets;i++){const setRow=document.createElement("div");setRow.className="set-row";const weightInput=document.createElement("input");weightInput.type="number";weightInput.className="weight-input";weightInput.dataset.exercise=exerciseId;weightInput.dataset.set=i;weightInput.placeholder=weightUnit;weightInput.addEventListener("change",handleExerciseSetChange);weightInput.addEventListener("blur",handleExerciseSetChange);const completedCheckbox=document.createElement("input");completedCheckbox.type="checkbox";completedCheckbox.className="completed-checkbox";completedCheckbox.dataset.exercise=exerciseId;completedCheckbox.dataset.set=i;completedCheckbox.addEventListener("change",(function(event){if(this.checked){this.closest(".set-row").classList.add("completed")}else{this.closest(".set-row").classList.remove("completed")}handleExerciseSetChange(event)}));setRow.appendChild(weightInput);setRow.appendChild(completedCheckbox);setInputsContainer.appendChild(setRow)}workingSetsCell.textContent="";workingSetsCell.appendChild(setInputsContainer)}));console.log("Exercise inputs generation complete")}function addWeightUnitSelector(){const dataManagement=document.querySelector(".data-management");if(!dataManagement)return;const unitSelector=createWeightUnitSelector();dataManagement.appendChild(unitSelector)}document.addEventListener("DOMContentLoaded",(function(){console.log("DOM loaded, initializing exercise inputs...");addWeightUnitSelector();setTimeout(generateExerciseInputs,100);document.querySelectorAll(".phase-btn").forEach((btn=>{btn.addEventListener("click",(()=>{setTimeout(generateExerciseInputs,100)}))}));document.querySelectorAll(".week-btn").forEach((btn=>{btn.addEventListener("click",(()=>{setTimeout(generateExerciseInputs,100)}))}))}));