function initProgressTracker(){console.log("Initializing progress tracker...");updateAllWorkoutProgress();document.querySelectorAll(".completed-checkbox").forEach((checkbox=>{checkbox.addEventListener("change",(function(){const workoutDay=this.closest(".workout-day");if(workoutDay){updateWorkoutDayProgress(workoutDay)}}))}));document.querySelectorAll(".phase-btn, .week-btn").forEach((btn=>{btn.addEventListener("click",(()=>{setTimeout(updateAllWorkoutProgress,100)}))}))}function updateAllWorkoutProgress(){const activeWorkoutDays=document.querySelectorAll(".week-content.active .workout-day");activeWorkoutDays.forEach((day=>{updateWorkoutDayProgress(day)}))}function updateWorkoutDayProgress(workoutDay){const exerciseRows=workoutDay.querySelectorAll(".exercise-row");const totalExercises=new Set;const completedExercises=new Set;exerciseRows.forEach((row=>{const exerciseName=row.querySelector(".exercise-name");if(!exerciseName)return;const infoIcon=exerciseName.querySelector(".info-icon");if(!infoIcon)return;const onclickAttr=infoIcon.getAttribute("onclick");if(!onclickAttr)return;const match=onclickAttr.match(/toggleNotes\('(.+?)-notes'\)/);if(!match||!match[1])return;const exerciseId=match[1];totalExercises.add(exerciseId);const checkboxes=row.querySelectorAll(`.completed-checkbox[data-exercise="${exerciseId}"]`);let isCompleted=false;checkboxes.forEach((checkbox=>{if(checkbox.checked){isCompleted=true}}));if(isCompleted){completedExercises.add(exerciseId);row.classList.add("exercise-completed")}else{row.classList.remove("exercise-completed")}}));const totalCount=totalExercises.size;const completedCount=completedExercises.size;const progressPercent=totalCount>0?Math.round(completedCount/totalCount*100):0;const progressBar=workoutDay.querySelector(".progress-bar-fill");if(progressBar){progressBar.style.width=`${progressPercent}%`;if(progressPercent===100){progressBar.style.backgroundColor="var(--success-color)"}else if(progressPercent>50){progressBar.style.backgroundColor="var(--brand-gold)"}else if(progressPercent>0){progressBar.style.backgroundColor="var(--warning-color)"}else{progressBar.style.backgroundColor="var(--neutral-400)"}}const progressStats=workoutDay.querySelector(".progress-stats");if(progressStats){progressStats.innerHTML=`\n      <span>${completedCount}/${totalCount} exercises completed</span>\n      <span>${progressPercent}%</span>\n    `}const dayHeader=workoutDay.querySelector(".day-header");if(dayHeader){if(progressPercent===100){if(!dayHeader.querySelector(".completion-badge")){const badge=document.createElement("span");badge.className="completion-badge";badge.innerHTML="✓";badge.title="Workout Complete";dayHeader.appendChild(badge)}}else{const badge=dayHeader.querySelector(".completion-badge");if(badge){badge.remove()}}}saveProgressToLocalStorage(workoutDay,completedExercises)}function saveProgressToLocalStorage(workoutDay,completedExercises){if(!window.workoutStorage)return;const phaseContent=workoutDay.closest(".phase-content");const weekContent=workoutDay.closest(".week-content");if(!phaseContent||!weekContent)return;const phaseId=phaseContent.id;const weekId=weekContent.id.split("-")[1];const dayHeader=workoutDay.querySelector(".day-header").textContent.toLowerCase().replace(/\s+/g,"").replace("#","");const phaseNum=phaseId.replace("phase","");const weekNum=weekId.replace("week","");const workoutData=window.workoutStorage.loadAll();if(!workoutData.progress)workoutData.progress={};if(!workoutData.progress[phaseId])workoutData.progress[phaseId]={};if(!workoutData.progress[phaseId][weekId])workoutData.progress[phaseId][weekId]={};if(!workoutData.progress[phaseId][weekId][dayHeader]){workoutData.progress[phaseId][weekId][dayHeader]={date:(new Date).toISOString().split("T")[0],exercises:{}}}const exercises=workoutDay.querySelectorAll(".exercise-row");exercises.forEach((row=>{const exerciseName=row.querySelector(".exercise-name");if(!exerciseName)return;const infoIcon=exerciseName.querySelector(".info-icon");if(!infoIcon)return;const onclickAttr=infoIcon.getAttribute("onclick");if(!onclickAttr)return;const match=onclickAttr.match(/toggleNotes\('(.+?)-notes'\)/);if(!match||!match[1])return;const exerciseId=match[1];const isCompleted=completedExercises.has(exerciseId);if(!workoutData.progress[phaseId][weekId][dayHeader].exercises[exerciseId]){workoutData.progress[phaseId][weekId][dayHeader].exercises[exerciseId]={completed:isCompleted}}else{workoutData.progress[phaseId][weekId][dayHeader].exercises[exerciseId].completed=isCompleted}}));window.workoutStorage.saveAll(workoutData)}function loadProgressFromLocalStorage(){if(!window.workoutStorage)return;const workoutData=window.workoutStorage.loadAll();if(!workoutData.progress)return;const workoutDays=document.querySelectorAll(".workout-day");workoutDays.forEach((day=>{const phaseContent=day.closest(".phase-content");const weekContent=day.closest(".week-content");if(!phaseContent||!weekContent)return;const phaseId=phaseContent.id;const weekId=weekContent.id.split("-")[1];const dayHeader=day.querySelector(".day-header").textContent.toLowerCase().replace(/\s+/g,"").replace("#","");if(workoutData.progress[phaseId]&&workoutData.progress[phaseId][weekId]&&workoutData.progress[phaseId][weekId][dayHeader]){const dayData=workoutData.progress[phaseId][weekId][dayHeader];if(dayData.exercises){for(const exerciseId in dayData.exercises){const exerciseData=dayData.exercises[exerciseId];if(exerciseData.completed){const exerciseRows=day.querySelectorAll(".exercise-row");exerciseRows.forEach((row=>{const infoIcon=row.querySelector(".info-icon");if(!infoIcon)return;const onclickAttr=infoIcon.getAttribute("onclick");if(!onclickAttr)return;const match=onclickAttr.match(/toggleNotes\('(.+?)-notes'\)/);if(!match||!match[1])return;if(match[1]===exerciseId){row.classList.add("exercise-completed");const checkboxes=row.querySelectorAll(`.completed-checkbox[data-exercise="${exerciseId}"]`);checkboxes.forEach((checkbox=>{checkbox.checked=true;const setRow=checkbox.closest(".set-row");if(setRow){setRow.classList.add("completed")}}))}}))}}}updateWorkoutDayProgress(day)}}))}document.addEventListener("DOMContentLoaded",(()=>{initProgressTracker();loadProgressFromLocalStorage()}));document.addEventListener("DOMContentLoaded",(()=>{const style=document.createElement("style");style.textContent=`\n    .exercise-completed {\n      position: relative;\n    }\n    \n    .exercise-completed::after {\n      content: "✓";\n      position: absolute;\n      top: 50%;\n      right: 10px;\n      transform: translateY(-50%);\n      color: var(--success-color);\n      font-size: 18px;\n      font-weight: bold;\n    }\n    \n    .completion-badge {\n      display: inline-flex;\n      align-items: center;\n      justify-content: center;\n      width: 24px;\n      height: 24px;\n      background-color: var(--success-color);\n      color: white;\n      border-radius: 50%;\n      margin-left: 10px;\n      font-size: 14px;\n      font-weight: bold;\n    }\n  `;document.head.appendChild(style)}));