/**
 * Workout Loader Module - Minified
 * Dynamically loads workout data from JSON files and creates workout day sections
 */
async function fetchWorkoutData(e,t){try{const a=await fetch(`./dev/exercise-data/phase${e}-week${t}.json`);if(!a.ok)throw new Error(`Failed to fetch workout data: ${a.status} ${a.statusText}`);return await a.json()}catch(e){return console.error("Error fetching workout data:",e),null}}function createWorkoutDaySection(e,t){const a=document.createElement("article");a.className="workout-day";const n=document.createElement("header");n.className="day-header",n.textContent=t.title,a.appendChild(n);const o=document.createElement("div");o.className="progress-indicator",o.innerHTML=`
    <div>
      <span>Workout Progress</span>
      <div class="progress-bar">
        <div class="progress-bar-fill" style="width: 0%"></div>
      </div>
      <div class="progress-stats">
        <span>0/${t.exercises.length} exercises completed</span>
        <span>0%</span>
      </div>
    </div>
  `,a.appendChild(o);const s=document.createElement("table");s.className="exercise-table";const r=document.createElement("thead");r.innerHTML=`
    <tr>
      <th class="table-header" style="width: 35%;">Exercise</th>
      <th class="table-header" style="width: 15%;">Warm-up</th>
      <th class="table-header" style="width: 15%;">Working</th>
      <th class="table-header" style="width: 15%;">Reps</th>
      <th class="table-header" style="width: 10%;">RPE</th>
      <th class="table-header" style="width: 10%;">Rest</th>
    </tr>
  `,s.appendChild(r);const c=document.createElement("tbody");return t.exercises.forEach(e=>{const t=document.createElement("tr");t.className="exercise-row";const a=document.createElement("td");a.className="exercise-name",a.innerHTML=`
      <a href="${e.link}" class="exercise-link" target="_blank" rel="noopener">${e.name}</a>
      <span class="info-icon" onclick="toggleNotes('${e.id}-notes')">i</span>
    `,t.appendChild(a);const n=document.createElement("td");n.className="exercise-data",n.textContent=e.warmup_sets,t.appendChild(n);const o=document.createElement("td");o.className="exercise-data",o.textContent=e.working_sets,t.appendChild(o);const s=document.createElement("td");s.className="exercise-data",s.textContent=e.reps,t.appendChild(s);const r=document.createElement("td");r.className="exercise-data",r.textContent=e.rpe,t.appendChild(r);const d=document.createElement("td");d.className="exercise-data",d.textContent=e.rest,t.appendChild(d),c.appendChild(t);const i=document.createElement("tr");i.id=`${e.id}-notes`,i.className="exercise-notes";const l=document.createElement("td");l.colSpan=6;let p=`<strong>Notes:</strong> ${e.notes}`;if(e.substitutions&&e.substitutions.length>0){p+=`
        <br><br>
        <button class="sub-btn" onclick="toggleSubs('${e.id}-subs')">Show Substitutions</button>
        <div id="${e.id}-subs" class="substitutions">
          <strong>Substitution Options:</strong>
      `,e.substitutions.forEach((e,t)=>{p+=`<br>${t+1}. ${e}`}),p+="</div>"}l.innerHTML=p,i.appendChild(l),c.appendChild(i)}),s.appendChild(c),a.appendChild(s),a}async function loadWorkoutData(e,t){console.log(`Loading workout data for Phase ${e}, Week ${t}...`);const a=document.getElementById(`phase${e}-week${t}`);if(!a)return void console.error(`Week content container not found for Phase ${e}, Week ${t}`);a.innerHTML="";const n=await fetchWorkoutData(e,t);if(!n)return console.error(`Failed to load workout data for Phase ${e}, Week ${t}`),void(a.innerHTML=`<p style="padding: 20px; text-align: center;">Failed to load workout data for Phase ${e}, Week ${t}. Please try again later.</p>`);for(const e in n.days){const t=n.days[e],o=createWorkoutDaySection(e,t);a.appendChild(o)}window.generateExerciseInputs&&setTimeout(window.generateExerciseInputs,100),window.updateWorkoutProgress&&setTimeout(window.updateWorkoutProgress,200),console.log(`Workout data loaded for Phase ${e}, Week ${t}`)}function initWorkoutLoader(){console.log("Initializing workout loader..."),loadWorkoutData(1,1),document.querySelectorAll(".phase-btn").forEach(e=>{e.addEventListener("click",function(){const e=this.getAttribute("onclick").match(/showPhase\('(.+?)'\)/)[1],t=parseInt(e.replace("phase",""));setTimeout(()=>{const a=document.querySelector(`#${e} .week-content.active`);if(a){const e=parseInt(a.id.split("-")[1].replace("week",""));loadWorkoutData(t,e)}},100)})}),document.querySelectorAll(".week-btn").forEach(e=>{e.addEventListener("click",function(){const e=this.getAttribute("onclick").match(/showWeek\('(.+?)', '(.+?)'\)/);if(e){const t=e[1],a=e[2],n=parseInt(t.replace("phase","")),o=parseInt(a.replace("week",""));setTimeout(()=>{loadWorkoutData(n,o)},100)}})}),console.log("Workout loader initialized")}window.workoutLoader={init:initWorkoutLoader,loadData:loadWorkoutData},document.addEventListener("DOMContentLoaded",function(){initWorkoutLoader()});