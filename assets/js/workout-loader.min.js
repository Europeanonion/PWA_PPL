async function fetchWorkoutData(e,t){try{const o=await fetch(`../../dev/exercise-data/phase${e}-week${t}.json`);if(!o.ok){console.warn(`Failed to fetch workout data: ${o.status} ${o.statusText}`);const n=await fetch(`/ppl-workout/dev/exercise-data/phase${e}-week${t}.json`);if(!n.ok)throw new Error("Failed to fetch workout data with all path strategies");return await n.json()}return await o.json()}catch(e){return console.error("Error fetching workout data:",e),null}}function createWorkoutDaySection(e,t){const o=document.createElement("section");o.className="workout-day",o.id=e;const n=document.createElement("h3");n.className="day-header",n.textContent=t.title,o.appendChild(n);const a=document.createElement("table");a.className="exercise-table";const s=document.createElement("thead"),c=document.createElement("tr");["Exercise","Sets","Working Sets","Reps","RPE","Rest"].forEach((e=>{const t=document.createElement("th");t.textContent=e,c.appendChild(t)})),s.appendChild(c),a.appendChild(s);const r=document.createElement("tbody");return t.exercises&&t.exercises.length>0&&t.exercises.forEach((e=>{const t=document.createElement("tr");t.className="exercise-row",t.id=`${e.id}-row`;const o=document.createElement("td");o.className="exercise-name";const n=document.createElement("span");n.textContent=e.name,o.appendChild(n);const a=document.createElement("span");a.className="info-icon",a.innerHTML="â“˜",a.setAttribute("onclick",`toggleNotes('${e.id}-notes')`),o.appendChild(a);const s=document.createElement("td");s.className="exercise-data",s.textContent=e.warmup_sets;const c=document.createElement("td");c.className="exercise-data",c.textContent=e.working_sets;const d=document.createElement("td");d.className="exercise-data",d.textContent=e.reps;const i=document.createElement("td");i.className="exercise-data",i.textContent=e.rpe;const l=document.createElement("td");l.className="exercise-data",l.textContent=e.rest,t.appendChild(o),t.appendChild(s),t.appendChild(c),t.appendChild(d),t.appendChild(i),t.appendChild(l),r.appendChild(t);const u=document.createElement("tr");u.className="notes-row",u.id=`${e.id}-notes`,u.style.display="none";const m=document.createElement("td");m.colSpan=6;const p=document.createElement("div");p.className="notes-content";const h=document.createElement("p");if(h.textContent=e.notes,p.appendChild(h),e.link){const t=document.createElement("a");t.href=e.link,t.textContent="Watch Video",t.target="_blank",t.rel="noopener",p.appendChild(t)}if(e.substitutions&&e.substitutions.length>0){const t=document.createElement("p");t.className="subs-title",t.textContent="Substitutions:",t.innerHTML+=` <span class="toggle-subs" onclick="toggleSubs('${e.id}-subs')">Show</span>`,p.appendChild(t);const o=document.createElement("ul");o.className="subs-list",o.id=`${e.id}-subs`,o.style.display="none",e.substitutions.forEach((e=>{const t=document.createElement("li");t.textContent=e,o.appendChild(t)})),p.appendChild(o)}m.appendChild(p),u.appendChild(m),r.appendChild(u)})),a.appendChild(r),o.appendChild(a),o}async function loadWorkoutData(e,t){const o=document.querySelector(`#phase${e}-week${t}`);if(!o)return void console.error(`Content container not found for Phase ${e}, Week ${t}`);o.innerHTML="";const n=await fetchWorkoutData(e,t);if(!n)return console.error(`Failed to load workout data for Phase ${e}, Week ${t}`),void(o.innerHTML='<p class="error-message">Failed to load workout data. Please try again later.</p>');n.days&&Object.entries(n.days).forEach((([e,t])=>{const n=createWorkoutDaySection(e,t);o.appendChild(n)})),window.generateExerciseInputs&&setTimeout(window.generateExerciseInputs,300),window.updateWorkoutProgress&&setTimeout(window.updateWorkoutProgress,400),console.log(`Workout data loaded for Phase ${e}, Week ${t}`)}function checkWorkoutLoader(){return window.loadWorkoutData||(window.loadWorkoutData=loadWorkoutData,window.fetchWorkoutData=fetchWorkoutData,window.createWorkoutDaySection=createWorkoutDaySection,console.log("WorkoutLoader initialized")),!0}document.addEventListener("DOMContentLoaded",(function(){console.log("DOM loaded, checking for workoutLoader..."),setTimeout((()=>{checkWorkoutLoader()||(console.log("WorkoutLoader not available yet, will retry..."),setTimeout((()=>{checkWorkoutLoader()||(console.log("WorkoutLoader still not available, final retry..."),setTimeout((()=>{checkWorkoutLoader()||console.error("WorkoutLoader not available after multiple attempts")}),2e3))}),1500))}),500)}));