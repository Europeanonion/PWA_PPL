async function fetchWorkoutData(e,t){try{const a=[`./dev/exercise-data/phase${e}-week${t}.json`,`../dev/exercise-data/phase${e}-week${t}.json`,`../../dev/exercise-data/phase${e}-week${t}.json`,`/dev/exercise-data/phase${e}-week${t}.json`,`/ppl-workout/dev/exercise-data/phase${e}-week${t}.json`,`ppl-workout/dev/exercise-data/phase${e}-week${t}.json`,`exceljson/ppl-workout/dev/exercise-data/phase${e}-week${t}.json`,`/exceljson/ppl-workout/dev/exercise-data/phase${e}-week${t}.json`,`/workspaces/exceljson/ppl-workout/dev/exercise-data/phase${e}-week${t}.json`];for(const n of a)try{console.log(`Trying path: ${n}`);const a=await fetch(n);if(a.ok){console.log(`Successfully loaded data from: ${n}`);const o=await a.json();return console.log("Data loaded:",o),o}}catch(e){console.warn(`Path ${n} failed: ${e.message}`)}throw new Error(`Failed to fetch workout data for Phase ${e}, Week ${t} with all path strategies`)}catch(a){console.error("Error fetching workout data:",a);const n=document.querySelector(`#phase${e}-week${t}`);return n&&(n.innerHTML=`\n        <div class="error-message">\n          <p>Failed to load workout data for Phase ${e}, Week ${t}.</p>\n          <p>Please check your internet connection and try again.</p>\n          <p>Error details: ${a.message}</p>\n        </div>\n      `),null}}function createWorkoutDaySection(e,t){const a=document.createElement("section");a.className="workout-day",a.id=e;const n=document.createElement("h3");n.className="day-header",n.textContent=t.title,a.appendChild(n);const o=document.createElement("table");o.className="exercise-table";const s=document.createElement("thead"),c=document.createElement("tr");["Exercise","Sets","Working Sets","Reps","RPE","Rest"].forEach((e=>{const t=document.createElement("th");t.textContent=e,c.appendChild(t)})),s.appendChild(c),o.appendChild(s);const r=document.createElement("tbody");return t.exercises&&t.exercises.length>0&&t.exercises.forEach((e=>{const t=document.createElement("tr");t.className="exercise-row",t.id=`${e.id}-row`;const a=document.createElement("td");a.className="exercise-name";const n=document.createElement("span");n.textContent=e.name,a.appendChild(n);const o=document.createElement("span");o.className="info-icon",o.innerHTML="â“˜",o.setAttribute("onclick",`toggleNotes('${e.id}-notes')`),a.appendChild(o);const s=document.createElement("td");s.className="exercise-data",s.textContent=e.warmup_sets;const c=document.createElement("td");c.className="exercise-data",c.textContent=e.working_sets;const d=document.createElement("td");d.className="exercise-data",d.textContent=e.reps;const i=document.createElement("td");i.className="exercise-data",i.textContent=e.rpe;const l=document.createElement("td");l.className="exercise-data",l.textContent=e.rest,t.appendChild(a),t.appendChild(s),t.appendChild(c),t.appendChild(d),t.appendChild(i),t.appendChild(l),r.appendChild(t);const p=document.createElement("tr");p.className="notes-row",p.id=`${e.id}-notes`,p.style.display="none";const u=document.createElement("td");u.colSpan=6;const m=document.createElement("div");m.className="notes-content";const h=document.createElement("p");if(h.textContent=e.notes,m.appendChild(h),e.link){const t=document.createElement("a");t.href=e.link,t.textContent="Watch Video",t.target="_blank",t.rel="noopener",m.appendChild(t)}if(e.substitutions&&e.substitutions.length>0){const t=document.createElement("p");t.className="subs-title",t.textContent="Substitutions:",t.innerHTML+=` <span class="toggle-subs" onclick="toggleSubs('${e.id}-subs')">Show</span>`,m.appendChild(t);const a=document.createElement("ul");a.className="subs-list",a.id=`${e.id}-subs`,a.style.display="none",e.substitutions.forEach((e=>{const t=document.createElement("li");t.textContent=e,a.appendChild(t)})),m.appendChild(a)}u.appendChild(m),p.appendChild(u),r.appendChild(p)})),o.appendChild(r),a.appendChild(o),a}async function loadWorkoutData(e,t){const a=document.querySelector(`#phase${e}-week${t}`);if(!a)return void console.error(`Content container not found for Phase ${e}, Week ${t}`);a.innerHTML="";const n=await fetchWorkoutData(e,t);if(!n)return console.error(`Failed to load workout data for Phase ${e}, Week ${t}`),void(a.innerHTML='<p class="error-message">Failed to load workout data. Please try again later.</p>');n.days&&Object.entries(n.days).forEach((([e,t])=>{const n=createWorkoutDaySection(e,t);a.appendChild(n)})),window.generateExerciseInputs&&setTimeout(window.generateExerciseInputs,300),window.updateWorkoutProgress&&setTimeout(window.updateWorkoutProgress,400),console.log(`Workout data loaded for Phase ${e}, Week ${t}`)}function checkWorkoutLoader(){return window.workoutLoader||(window.workoutLoader={loadData:loadWorkoutData,fetchData:fetchWorkoutData,createDaySection:createWorkoutDaySection},window.loadWorkoutData=loadWorkoutData,window.fetchWorkoutData=fetchWorkoutData,window.createWorkoutDaySection=createWorkoutDaySection,console.log("WorkoutLoader initialized")),!0}document.addEventListener("DOMContentLoaded",(function(){console.log("DOM loaded, checking for workoutLoader..."),setTimeout((()=>{checkWorkoutLoader()||(console.log("WorkoutLoader not available yet, will retry..."),setTimeout((()=>{checkWorkoutLoader()||(console.log("WorkoutLoader still not available, final retry..."),setTimeout((()=>{checkWorkoutLoader()||console.error("WorkoutLoader not available after multiple attempts")}),2e3))}),1500))}),500)}));